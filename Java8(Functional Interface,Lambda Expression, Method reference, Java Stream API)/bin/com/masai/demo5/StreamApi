Java Stream API

This API is also introduced in java 8. This API belongs to java.util.stream package.

The Stream API is used to process collections of objects. A stream is a sequence of objects that supports 
various methods which can be pipelined to produce the desired result.

The feature of java stream:

->	The stream does not stores the elements, it only represents elements in a sequence. 
	Example: wire does not store the electricity.
	
->	It holds only objects, primitives are not allowed.
	
->	Operation(filtering) performed on the stream does not modify its source.
	Example: filtering a stream obtained from a source(collection) produces a new stream with the filtered 
	element rather than removing the elements from the source collection.
	
->	With the help of stream obj we can perform various operations on the collection of objects in 
	functional style, like filtering some elements, transform some elements, manipulate, sort, etc.
	
->	Stream is lazy and evaluates code only when required.
	
->	The elements of a stream are only visited once during the life of a stream. a new stream must be 
	generated to revisit the same elements of the source.

<*> There are two types of methods in Stream interface:

	1. Intermediate methods
	2. Terminal methods

   Intermediate methods
***************************

->	In Java Stream API, intermediate operations are operations that are applied on a stream and return a new stream.
 
->	These operations do not perform any terminal operations and do not produce any side-effects. 

->  Intermediate operations are typically used to transform, filter, or manipulate the elements in the stream.

->  Examples of Intermediate methods are map(),filter(),sorted() and skip()..

    Terminal methods
**************************
->	In Java Stream API, terminal operations are operations that are applied on a stream and produce a result.

->	Once a terminal operation is applied, the stream cannot be used again.

->  Example of Terminal methods are forEach(), collect() and reduce() etc..






